name: Build and Release JAR with Gradle

on:
  push:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'

    - name: Override invalid Java home in Gradle
      run: |
        # Remove any invalid Java home settings from gradle.properties
        if [ -f "gradle.properties" ]; then
          sed -i '/org.gradle.java.home/d' gradle.properties
          sed -i '/java.home/d' gradle.properties
        fi

    - name: Build with Gradle using system JDK
      run: |
        if [ -f "gradlew" ]; then
          chmod +x gradlew
          # Use system JDK instead of configured Java home
          ./gradlew clean build -x test -Dorg.gradle.java.home=$JAVA_HOME
        else
          echo "gradlew not found"
          exit 1
        fi

    - name: Find JAR file
      id: find-jar
      run: |
        JAR_PATH=$(find . -name "Grohe-0.0.2.jar" | head -1)
        if [ -z "$JAR_PATH" ]; then
          JAR_PATH=$(find . -name "Grohe*.jar" | head -1)
        fi
        if [ -z "$JAR_PATH" ]; then
          JAR_PATH=$(find . -name "*.jar" -path "*/build/libs/*" ! -name "*-plain.jar" | head -1)
        fi
        if [ -z "$JAR_PATH" ]; then
          echo "No JAR file found. Available JAR files:"
          find . -name "*.jar" || echo "No JAR files found"
          exit 1
        fi
        echo "JAR_PATH=$JAR_PATH" >> $GITHUB_OUTPUT
        echo "JAR_NAME=$(basename $JAR_PATH)" >> $GITHUB_OUTPUT
        echo "Found JAR: $JAR_PATH"

    - name: Upload JAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: app-jar
        path: ${{ steps.find-jar.outputs.JAR_PATH }}
        retention-days: 1

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      with:
        files: ${{ steps.find-jar.outputs.JAR_PATH }}
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }}
        body: |
          Automated release from GitHub Actions
          JAR: ${{ steps.find-jar.outputs.JAR_NAME }}
